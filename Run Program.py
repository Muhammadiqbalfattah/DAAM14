# -*- coding: utf-8 -*-
"""AlgorthmDjisktra.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16BKrNTyDjPTHqAKPv9SvU5vMGNwjDt30
"""

def dijkstra(current, nodes, distances):
    unvisited = {node: None for node in nodes}
    visited = {}
    currentDistance = 0
    unvisited[current] = currentDistance
    while True:

        for neighbour, distance in distances[current].items():
      
            if neighbour not in unvisited: continue
            newDistance = currentDistance + distance
            if unvisited[neighbour] is None or unvisited[neighbour] > newDistance:
                unvisited[neighbour] = newDistance
    
        visited[current] = currentDistance
        del unvisited[current]
        if not unvisited: break
        candidates = [node for node in unvisited.items() if node[1]]
        print(sorted(candidates, key = lambda x: x[1]))
        current, currentDistance = sorted(candidates, key = lambda x: x[1])[0]
    return visited

nodes = ('A', 'B', 'C', 'D', 'E')
distances = {
    'A': {'B': 2, 'C': 3, 'D': 6},
    'B': {'A': 2, 'D': 4},
    'C': {'A': 3, 'D': 3},
    'D': {'B' : 4,'E': 7},
    'E': {'B':7, 'D': 2}}
current = 'A'
  
print(dijkstra(current, nodes, distances))

